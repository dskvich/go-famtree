basePath: /api
definitions:
  domain.Tree:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  domain.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      lang:
        type: string
      login:
        type: string
      name:
        type: string
      password_hash:
        type: string
      role:
        type: string
    type: object
  httpserver.Error:
    properties:
      code:
        example: 400
        type: integer
      message:
        example: status bad request
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Some description
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/ap
  title: Go Family Tree API
  version: "1.0"
paths:
  /trees:
    get:
      consumes:
      - application/json
      description: List all trees
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Tree'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpserver.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httpserver.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpserver.Error'
      summary: List all trees
      tags:
      - Trees
    post:
      consumes:
      - application/json
      description: Create by json tree
      parameters:
      - description: Create a new tree
        in: body
        name: tree
        required: true
        schema:
          $ref: '#/definitions/domain.Tree'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Tree'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpserver.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httpserver.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpserver.Error'
      summary: Create a new tree
      tags:
      - Trees
  /trees/{tree_id}:
    delete:
      consumes:
      - application/json
      description: Delete by tree ID
      parameters:
      - description: Tree ID
        in: path
        name: tree_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpserver.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httpserver.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpserver.Error'
      summary: Delete a tree
      tags:
      - Trees
    get:
      consumes:
      - application/json
      description: Get a tree by ID
      parameters:
      - description: Tree ID
        in: path
        name: tree_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Tree'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpserver.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httpserver.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpserver.Error'
      summary: Get a tree
      tags:
      - Trees
    put:
      consumes:
      - application/json
      description: Update by json tree
      parameters:
      - description: Tree ID
        in: path
        name: tree_id
        required: true
        type: string
      - description: Update tree
        in: body
        name: tree
        required: true
        schema:
          $ref: '#/definitions/domain.Tree'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Tree'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpserver.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httpserver.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpserver.Error'
      summary: Update a tree
      tags:
      - Trees
  /users:
    get:
      consumes:
      - application/json
      description: List all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpserver.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httpserver.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpserver.Error'
      summary: List all users
      tags:
      - Users
  /users/{user_id}:
    get:
      consumes:
      - application/json
      description: Get a user by ID
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpserver.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httpserver.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpserver.Error'
      summary: Get a user
      tags:
      - Users
swagger: "2.0"
