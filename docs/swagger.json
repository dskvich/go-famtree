{
  "swagger": "2.0",
  "info": {},
  "paths": {
    "/trees": {
      "get": {
        "description": "List all trees",
        "tags": [
          "Trees"
        ],
        "summary": "List all trees",
        "operationId": "getAllTrees",
        "responses": {
          "200": {
            "description": "Tree",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Tree"
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "Create by json tree",
        "tags": [
          "Trees"
        ],
        "summary": "Create a new tree",
        "operationId": "newTree",
        "parameters": [
          {
            "x-go-name": "Tree",
            "name": "tree",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tree"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Tree",
            "schema": {
              "$ref": "#/definitions/Tree"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/trees/{tree_id}": {
      "get": {
        "description": "Get a tree by ID",
        "tags": [
          "Trees"
        ],
        "summary": "Get a tree",
        "operationId": "getTree",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "x-go-name": "TreeID",
            "name": "tree_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Tree",
            "schema": {
              "$ref": "#/definitions/Tree"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "description": "Update by json tree",
        "tags": [
          "Trees"
        ],
        "summary": "Update a tree",
        "operationId": "updateTree",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "x-go-name": "TreeID",
            "name": "tree_id",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "Tree",
            "name": "tree",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tree"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tree",
            "schema": {
              "$ref": "#/definitions/Tree"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "Delete by tree ID",
        "tags": [
          "Trees"
        ],
        "summary": "Delete a tree",
        "operationId": "deleteTree",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "x-go-name": "TreeID",
            "name": "tree_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "description": "List all users",
        "tags": [
          "Users"
        ],
        "summary": "List all users",
        "operationId": "getAllUsers",
        "responses": {
          "200": {
            "description": "User",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "description": "Get a user by ID",
        "tags": [
          "Users"
        ],
        "summary": "Get a user",
        "operationId": "getUser",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "x-go-name": "UserID",
            "name": "user_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "User",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Code"
        },
        "message": {
          "type": "string",
          "x-go-name": "Message"
        }
      },
      "x-go-package": "github.com/joffrua/go-famtree/internal/infra/httpserver"
    },
    "Person": {
      "type": "object",
      "properties": {
        "bio": {
          "type": "string",
          "x-go-name": "Bio"
        },
        "birth_date": {
          "type": "string",
          "x-go-name": "BirthDate"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedAt"
        },
        "death_date": {
          "type": "string",
          "x-go-name": "DeathDate"
        },
        "father_id": {
          "type": "string",
          "format": "uuid",
          "x-go-name": "FatherID"
        },
        "first_name": {
          "type": "string",
          "x-go-name": "FirstName"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "x-go-name": "ID"
        },
        "last_name": {
          "type": "string",
          "x-go-name": "LastName"
        },
        "maiden_name": {
          "type": "string",
          "x-go-name": "MaidenName"
        },
        "mother_id": {
          "type": "string",
          "format": "uuid",
          "x-go-name": "MotherID"
        },
        "patronymic": {
          "type": "string",
          "x-go-name": "Patronymic"
        },
        "tree_id": {
          "type": "string",
          "format": "uuid",
          "x-go-name": "TreeID"
        }
      },
      "x-go-package": "github.com/joffrua/go-famtree/internal/domain"
    },
    "Tree": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedAt"
        },
        "description": {
          "type": "string",
          "x-go-name": "Description"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "x-go-name": "ID"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-package": "github.com/joffrua/go-famtree/internal/domain"
    },
    "UUID": {
      "description": "A UUID is a 128 bit (16 byte) Universal Unique IDentifier as defined in RFC\n4122.",
      "type": "array",
      "items": {
        "type": "integer",
        "format": "uint8"
      },
      "x-go-package": "github.com/google/uuid"
    },
    "User": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedAt"
        },
        "email": {
          "type": "string",
          "format": "email",
          "x-go-name": "Email"
        },
        "id": {
          "$ref": "#/definitions/UUID",
          "format": "uuid"
        },
        "lang": {
          "type": "string",
          "x-go-name": "Lang"
        },
        "login": {
          "type": "string",
          "x-go-name": "Login"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "role": {
          "type": "string",
          "x-go-name": "Role"
        }
      },
      "x-go-package": "github.com/joffrua/go-famtree/internal/domain"
    }
  }
}